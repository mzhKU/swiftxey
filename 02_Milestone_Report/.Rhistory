library(manipulate)
myHist <- function(mu){
hist(galton$child, col="blue", breaks=100)
lines(c(mu, mu), c(0, 150), col="red", lwd=5)
mse <- mean((galton$child -mu)^2)
text(63,150,paste("mu=", mu))
text(63,140,paste("Imbalance =", round(mse,2)))
}
manipulate(myHist(mu), mu=slider(62,74,step=0.5))
library(UsingR)
library(manipulate)
myHist <- function(mu){
hist(galton$child, col="blue", breaks=100)
lines(c(mu, mu), c(0, 150), col="red", lwd=5)
mse <- mean((galton$child -mu)^2)
text(63,150,paste("mu=", mu))
text(63,140,paste("Imbalance =", round(mse,2)))
}
manipulate(myHist(mu), mu=slider(62,74,step=0.5))
library(UsingR)
library(manipulate)
myHist <- function(mu){
hist(galton$child, col="blue", breaks=100)
lines(c(mu, mu), c(0, 150), col="red", lwd=5)
mse <- mean((galton$child -mu)^2)
text(63,150,paste("mu=", mu))
text(63,140,paste("Imbalance =", round(mse,2)))
}
manipulate(myHist(mu), mu=slider(62,74))
library(knitr)
k <- 1000
xvals <- seq(-5, 5, length=k)
myplot <- function(df){
d <- data.frame(y=c(dnorm(xvals), dt(xvals, df)), x=xvals, dist=factor(rep(c("Normal", "T"), c(k,k))))
g <- ggplot(d, aes(x=x, y=y))
g <- g+geom_line(size=2, aes(colour=dist))
g
}
manipulate(myplot(mu), mu=slider(1, 20, step=1))
library(manipulate)
k <- 1000
xvals <- seq(-5, 5, length=k)
myplot <- function(df){
d <- data.frame(y=c(dnorm(xvals), dt(xvals, df)), x=xvals, dist=factor(rep(c("Normal", "T"), c(k,k))))
g <- ggplot(d, aes(x=x, y=y))
g <- g+geom_line(size=2, aes(colour=dist))
g
}
manipulate(myplot(mu), mu=slider(1, 20, step=1))
library(ggplot)
library(manipulate)
k <- 1000
xvals <- seq(-5, 5, length=k)
myplot <- function(df){
d <- data.frame(y=c(dnorm(xvals), dt(xvals, df)), x=xvals, dist=factor(rep(c("Normal", "T"), c(k,k))))
g <- ggplot(d, aes(x=x, y=y))
g <- g+geom_line(size=2, aes(colour=dist))
g
}
manipulate(myplot(mu), mu=slider(1, 20, step=1))
library(ggplot)
library(manipulate)
k <- 1000
xvals <- seq(-5, 5, length=k)
myplot <- function(df){
d <- data.frame(y=c(dnorm(xvals), dt(xvals, df)), x=xvals, dist=factor(rep(c("Normal", "T"), c(k,k))))
g <- ggplot(d, aes(x=x, y=y))
g <- g+geom_line(size=2, aes(colour=dist))
g
}
manipulate(myplot(mu), mu=slider(1, 20, step=1))
library("ggplot2", lib.loc="/Users/mzhKU_work/Library/R/3.0/library")
library(ggplot2)
manipulate
library(ggplot)
library(manipulate)
k <- 1000
xvals <- seq(-5, 5, length=k)
myplot <- function(df){
d <- data.frame(y=c(dnorm(xvals), dt(xvals, df)), x=xvals, dist=factor(rep(c("Normal", "T"), c(k,k))))
g <- ggplot(d, aes(x=x, y=y))
g <- g+geom_line(size=2, aes(colour=dist))
g
}
manipulate(myplot(mu), mu=slider(1, 20, step=1))
library("xkcd", lib.loc="/Users/mzhKU_work/Library/R/3.0/library")
xkcd
xkcdman
?xkcd
?xkcdman
xkcdman(aes(x=1, y=1, scale=1))
xkcdman(mapping=aes(x=1, y=1, scale=1))
mapping <- aes(x=x,
y=y,
scale=scale,
ratioxy=ratioxy,
angleofspine = angleofspine,
anglerighthumerus = anglerighthumerus,
anglelefthumerus = anglelefthumerus,
anglerightradius = anglerightradius,
angleleftradius = angleleftradius,
anglerightleg =  anglerightleg,
angleleftleg = angleleftleg,
angleofneck = angleofneck,
color = color )
mapping
dataman <- data.frame( x= c(-1,0,1), y=c(-10,0,10),
scale = c(10,7,5),
ratioxy = ratioxy,
angleofspine =  seq(- pi / 2, -pi/2 + pi/8, l=3) ,
anglerighthumerus = -pi/6,
anglelefthumerus = pi + pi/6,
anglerightradius = 0,
angleleftradius = runif(3,- pi/4, pi/4),
angleleftleg = 3*pi/2  + pi / 12 ,
anglerightleg = 3*pi/2  - pi / 12,
angleofneck = runif(3, min = 3 * pi / 2 - pi/10 , max = 3 * pi / 2 + pi/10),
color=c("A","B","C"))
datascaled <- data.frame(x=c(-3,3),y=c(-30,30))
p <- ggplot(data=datascaled, aes(x=x,y=y)) + geom_point()
xrange <- range(datascaled$x)
yrange <- range(datascaled$y)
ratioxy <- diff(xrange) / diff(yrange)
dataman <- data.frame( x= c(-1,0,1), y=c(-10,0,10),
scale = c(10,7,5),
ratioxy = ratioxy,
angleofspine =  seq(- pi / 2, -pi/2 + pi/8, l=3) ,
anglerighthumerus = -pi/6,
anglelefthumerus = pi + pi/6,
anglerightradius = 0,
angleleftradius = runif(3,- pi/4, pi/4),
angleleftleg = 3*pi/2  + pi / 12 ,
anglerightleg = 3*pi/2  - pi / 12,
angleofneck = runif(3, min = 3 * pi / 2 - pi/10 , max = 3 * pi / 2 + pi/10),
color=c("A","B","C"))
p + xkcdman(mapping,dataman)
data(sleep)
head(sleep)
?sleep
?t.test
t.test(extra ~ I(relevel(group, 2)), paired=T, data=sleep)
t.test(extra ~ I(relevel(group, 2)), paired=T, data=sleep)$conf
data(ChickWeight)
library(reshape2)
head(ChickWeight)
length(ChickWeight)
length(ChickWeight[,1])
widecw <- dcast(ChickWeight, Diet + Chick ~ Time, value.var="weight")
widecw
head(widecw)
getOption("rstudio.markdownToHTML")
version
?mtcars
ls()
x
barriers
?barriers
ls()
str(d)
m
m2
?abline
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
library(rCharts)
job         : HTML Movies
library(png)
install.packages("png")
library(png)
library(shiny)
quit()
stopwords()
library(tm)
stopwords()
"just" %in% stopwords()
"know" %in% stopwords()
"think" %in% stopwords()
"i" %in% stopwords()
"can" %in% stopwords()
ls()
"said" %in% stopwords()
devtools::install_github('slidify', 'ramnathv')
devtools::install_github('slidifyLibraries', 'ramnathv')
devtools::install_github('slidify', 'ramnathv')
library(devtools)
install.packages("devtools")
devtools::install_github('slidify', 'ramnathv')
devtools::install_github('slidifyLibraries', 'ramnathv')
slidify
library(slidify)
slidify::publish_rpubs("Milestone-Report.Rmd", "Milestone-Report.html")
getwd()
setwd("./courses/data_science/capstone/02_Milestone_Report")
slidify::publish_rpubs("Milestone-Report.Rmd", "Milestone-Report.html")
slidify::publish_rpubs("Milestone-Report.Rmd", "Milestone-Report.html")
